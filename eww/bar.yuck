(include "./bar/widgets/_calendar.yuck")
(include "./bar/widgets/_powermenu.yuck")

(defwidget launcher[]
  (box :orientation "h"
    :class "launcher"
    :tooltip "Launch apps"
    (button :class "dispatcher" :onclick "scripts/exec rofi -show drun" "")
  )
)

(defwidget workspaces []
  (literal :content workspace)
)
(deflisten workspace "scripts/getWorkspaces")


(defvar actions_are_opened false)
(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/bar")

(defwidget controls-dispatcher []
  (box :class "controls-dispatcher-box"
    :orientation "h"
    :space-evenly "false"
    (button :class "dispatcher-btn"
      :tooltip "Open controls"
      :onclick "controls/toggle.sh"
    "漣")
  )
)

(defwidget left []
  (box :orientation "h"
    :space-evenly "false"
    :halign "start"
    :class "left"
    (vol)
    (musicbox)
    (vol)
    ;(workspaces)
    ;(controls-dispatcher)
  )
)

(defwidget wintitle []
  (label :text xtitle :class "wintitle")
)
(defpoll xtitle :interval "1s" "scripts/getWinTitle")

(defwidget center []
  (box :class "center-widgets"
    :space-evenly "false"
    :halign "center"
    :orientation "h"
    (workspaces)
  )
)

(defwidget vol []
  (eventbox :onhover "${eww} update volume=true"
    :onhoverlost "${eww} update volume=false"
    (box      :orientation "h"
      :space-evenly "false"
      :spacing "2"
      (revealer :transition "slideleft"
        :reveal volume
        :duration "550ms"
        (scale    :class "volbar"
          :value current-volume
          :orientation "h"
          :flipped true
          :tooltip "Volume: ${current-volume}%"
          :max 101
          :min 0
        :onchange "amixer -D pulse sset Master {}%" ))
      (button   :onclick "scripts/popup audio"   :class "volume-icon" "vol"))))
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volume false)

(defwidget sep []
  (label :class "sep" :text "")
)

(defwidget dropdown [onclick ?class ?tooltip]
  (button :tooltip tooltip :class class :onclick onclick "")
)

(defwidget datebox []
  (box :orientation "h"
    :class "date-box"
    :space-evenly "false"
    (label :text dateval :class "content")
    (sep)
  )
)
(defpoll dateval :interval "1s" "scripts/getDate")

(defwidget musicbox[]
  (box :orientation "h"
    :space-evenly "false"
    :class "musicbox"
    song_art
    (box :class "art" :path art :style "background-image: url('${art}')")
    (label :class "title" :text song_title :tooltip full_song_title)
    
  )
)

(defwidget powermenu []
  (box :orientation "h"
    :space-evenly "false"
    :class "powermenu-box"
    (button :class "dispatcher"
      :tooltip "Toggle Power Menu"
      :onclick "eww open --toggle powermenu"
    "⏻")
  )
)

(defwidget right []
  (box :class "right-modules"
    :space-evenly "false"
    :halign "end"
    :orientation "h"
    (musicbox)
    (datebox)
    (powermenu)
  )
)

(defwidget bar []
  (box :class "bar"
    :orientation "h"
    (left)
    (center)
    (right)
  )
)

(defwindow bar
  :geometry (geometry :x "0px"
    :y "5px"
    :width "98%"
    :height "10px"
  :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "15px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  :focusable false
  (bar))
